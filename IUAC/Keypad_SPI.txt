#include "mbed.h"
#include "rtos.h"
 
#include "Keypad.h"
 
Serial        PC(USBTX, USBRX);
RtosTimer    *LedTimer;
DigitalOut    Led1(LED1);
DigitalOut    Led2(LED2);
int input;
int break1;
bool start = false;
int freq = 1;
int wave = 1;
int range = 1;
int group_num = 0;
char id = '0'; 
float T1= 290.1f;

int channelselected= 0;
int sensorselected= 0; 

float sensor1voltage,sensor2voltage,sensor3voltage,sensor4voltage;

char display[12]={"000.0 K"};
 
int channelsensortable[9] = {0, 1, 1, 1, 1, 1, 1, 1, 1 };
 int i;
 float kybstrnum=0.0f;
 
 float x1,x2,y1,y2;
// float x[11]= {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
// float y[11]= {0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100 };
 /////
 float m[10] ; float c[10];
float tout[1<<12]; float vin[1<<12];
float x[11]= {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
float y[11]= {0, 10, 25, 35, 40, 53, 60, 75, 80, 93, 100};
 
 
 ////

//CAN can1(p9,p10);
//CANMessage talk;
// Define your own keypad values
char Keytable[] = { 
    '1', '2', '3', // r0
    '4', '5', '6', // r1
    '7', '8', '9', // r2
    '*', '0', '#' // r3
  // c0   c1  c2
 };
 
 int baud;
 
AnalogIn ch1(p15); 
AnalogIn ch2(p16); 
AnalogIn ch3(p17); 
AnalogIn ch4(p18); 
 
SPI spi(p5, NC, p7); //(p5, NC, p7)  ///p6  from proto1 pcb  // mosi, miso, sclk //p6 used for emergency
DigitalOut cs(p28); //27  // p8 removed passwordbecause of clash with g. display// this is cs , in display it is STB

 
int32_t       Index = -1;
 
uint32_t cbAfterInput(uint32_t index)
{
    Index = index;
    
    //PC.printf("\n Entered .cbAfterInput..\n");
   // PC.printf("\n index slected is %u\n",Index);
    
    return 0;
}

void Send_Message() {
 
    PC.printf("\n Message Sent out to CAN port...\n");
/*
    talk.data[0] = id;
    talk.data[1] = state;
    can1.write(talk);
    
    if(can1.write(talk))
    {
        PC.printf("Sent to id = %c with state = %c\n", talk.data[0], talk.data[1]);
        }
    
    PC.printf("Press * to go to main menu\n");
    */
 }
 
 ////
 void displayinitialize()
{
int counter;
    spi.format(16,3);
    spi.frequency(1000000);  // spi freq  10 KHz

 
 
////// DISPLAY1
    cs = 0;
    spi.write(0xF830);
    cs=1;
      for (counter=0;counter<1000;counter++);//wait(.01);
    
   
    cs = 0;
    spi.write(0xF80C); //0C
    cs=1;
      for (counter=0;counter<1000;counter++);// wait(.01);

return;
}

 
 void displaychar(unsigned int  mychar)
{
int counter;
unsigned int myint= 0x0;
 

    
    cs = 0;
    
    myint= (0xFA00 | (mychar));
    spi.write(myint);
    cs=1;
    for (counter=0;counter<1000;counter++);   //wait(.01);
    
    return;

}



void displaygotofirstchar(int lineno )
{
int counter1,counter2; 
  if (lineno == 1)
  {
   cs = 0;
   spi.write(0xF880);
   cs=1;
     for (counter1=0;counter1<1000;counter1++);// wait(.01);
   cs  =1;   
  }
  else if (lineno==2)
  {
   cs = 0;
   spi.write(0xF8C0);
   cs=1;
     for (counter2=0;counter2<1000;counter2++); //wait(.01);
   cs  =1;   
  
  };

return;  
}



void writestringspi_line1(char *s)
{

char *mystr;
mystr = s;

while (*mystr)
{

displaychar(*mystr);


//pc.printf("%c",*mystr);

mystr = mystr+1;

}
return;
}



void displaychar_line2(unsigned int  mychar)
{
int counter1,counter2;
 
 unsigned int myint= 0x0; 
 
  
   cs = 0;
   spi.write(0xF80C);  //0C
   cs=1;
     for (counter1=0;counter1<1000;counter1++);// wait(.01);
     
   cs = 0;
    
    if (mychar == '*'){ mychar = '%'; } // added to make line2 * key work like %
    
    myint= (0xFA00 | (mychar));
    spi.write(myint);
    cs=1;
      for (counter2=0;counter2<1000;counter2++);// wait(.01);

return;
}



void writestringspi_line2(char *s)
{
int counter;
char *mystr;
mystr = s;

    cs = 0;
    spi.write(0xF8C0);
    cs=1;
    for (counter=0;counter<100000;counter++);
    //wait(.01);

while (*mystr)
{


displaychar_line2(*mystr);


//pc.printf("%c",*mystr);

mystr = mystr+1;
}

return;
}

 
 
 ///
 int  enter2key(int ch) 
{
    break1 = 0;
    Index = -1;
     
    while (break1 != 1) {
        __wfi();
        if (Index > -1) {

            input = Index + 1;
            PC.printf("\n input pressed is %u\n",input);
            switch (input){
                
                case 12:
                    sensorselected=ch;
                    PC.printf("channel %d and sensor %d type stored on ENTER pressed\n",channelselected,sensorselected);
                    channelsensortable[channelselected]=sensorselected;
                    //PC.printf("\ calling sensor select fn ..\n");
                    //selectSensor();
                     //selectSensor();
                     
                     break1 =1;
                    break;  
                default:
                    /*PC.printf("Please Select a Valid Input\n");
                    PC.printf("\nSelect Sensor:\n");
                    PC.printf("1. Sensor 1\n");
                    PC.printf("2. Sensor 2\n");
                    PC.printf("Press * to go to main menu\n");
                    break; */ 
                    break1 =1;
                    PC.printf("you pressed  to ABORT ESCAPE.No CH AND SESNOR selected. no ENTER\n");
                    PC.printf("channel %d and sensor %d type stored on ENTER pressed\n",channelselected,sensorselected);
                    break;
                    
                }
            
            Index = -1;
        }
    }
    return 0;
}


 
 
 int selectSensor()
{
    break1 = 0;
    Index = -1;
    PC.printf("\Sensor curve type or type of sensor?:\n");
    PC.printf("1. DT470?\n");
    PC.printf("2. PT100?\n");
    PC.printf("Press  amy other key to   escape\n");
    while (break1 != 1) {
        __wfi();
        if (Index > -1) {

            input = Index + 1;
            switch (input){
                case 1:
                    PC.printf("Sensor 1  DT470 selected for this channel,press ENTER\n");
                    //how to set Sensor to 1?
                    //Send_Message();
                    enter2key(input); 
                    break1 =1;
                    break;
                case 2:
                    PC.printf("Sensor 2 PT100 selected for this channel press ENTER\n");
                    //how to set Sensor to 2?
                    //Send_Message();
                    enter2key(input);
                    break1 =1;
                    break;
                /*case 10:
                    break1 =1;
                    menu();
                    break;  */
                default:
                    /*PC.printf("Please Select a Valid Input\n");
                    PC.printf("\nSelect Sensor:\n");
                    PC.printf("1. Sensor 1\n");
                    PC.printf("2. Sensor 2\n");
                    PC.printf("Press * to go to main menu\n");
                    break; */ 
                    break1 =1;
                    PC.printf("you pressed to ESCAPE..No Sensor selected  no ENTER\n");
                    break;
                    
                }
            
            Index = -1;
        }
    }
    return 0;
}

 
 

int  enter1key(int ch) 
{
    int togglecounter=1;
    break1 = 0;
    Index = -1;
     
    while (break1 != 1) {
        __wfi();
        if (Index > -1) {

            input = Index + 1;
            PC.printf("\n input pressed is %u\n",input);
            switch (input){
                
                case 10:
                    togglecounter++;
                    sprintf(display,"CH%1d press  ENTER",togglecounter); 
                    //sprintf(display,"CH1 press  ENTER");   
                    writestringspi_line2(display);  
                    if (togglecounter==8) togglecounter=1;
                case 12:
                    
                    PC.printf("channel stored on ENTER pressed\n");
                    PC.printf("calling sensor select fn ..\n");
                    channelselected=ch;
                    
                    selectSensor();
                     //selectSensor();
                     break1 =1;
                    break;  
                default:
                    /*PC.printf("Please Select a Valid Input\n");
                    PC.printf("\nSelect Sensor:\n");
                    PC.printf("1. Sensor 1\n");
                    PC.printf("2. Sensor 2\n");
                    PC.printf("Press * to go to main menu\n");
                    break; */ 
                    
                    PC.printf("you pressed  to ABORT ESCAPE.No CH selected. no ENTER\n");
                    PC.printf("channel %d and sensor %d type stored on ENTER pressed\n",channelselected,sensorselected);
                    break1 =1;
                    break;
                    
                }
            
            Index = -1;
        }
    }
    return 0;
}
















 
void menu(){
    
  //  PC.printf("\nSelect Function:\n");
  //  PC.printf("1. Select Sensor\n");
  //  PC.printf("2. Curve Data Entry\n");
  //  PC.printf("3. Select Baud Rate\n");
  
 
}

 
 
int  sensortypeselect()
{
    break1 = 0;
    Index = -1;
    PC.printf("\nSelect the   channel?:\n");
    PC.printf("1. CH 1\n");
    PC.printf("2. CH 2\n");
    PC.printf("3. CH 3\n");
    PC.printf("4. CH 4\n");
    PC.printf("5. CH 5\n");
    PC.printf("6. CH 6\n");
    PC.printf("7. CH 7\n");
    PC.printf("8. CH 8\n");
    
    PC.printf("Press  amy other other than 1to8 to   escape\n");
    
    ////
    displaygotofirstchar(1);
    sprintf(display,"ENTER CH: 1 to 8");   
    writestringspi_line1(display);
    sprintf(display,"                " );   
    // displaygotofirstchar(11);
    // sprintf(display,"1"); 
    writestringspi_line2(display);     
   
    
    ///
    
    while (break1 != 1) {
        __wfi();
        if (Index > -1) {

            input = Index + 1;
            switch (input){
                case 1:
                //splayinitialize();
                    //displaygotofirstchar(2);
                    sprintf(display,"CH1 press  ENTER");   
                    writestringspi_line2(display);     
   
                    
                    //splaychar(0x31);
                    PC.printf("CH 1 selected,press ENTER\n");
                    //how to set Sensor to 1?
                    //Send_Message();
                    enter1key(1);
                    
                    
                    break1 =1;
                    break;
                case 2:
                //displaygotofirstchar(2);
                sprintf(display,"CH2 press  ENTER");   
                writestringspi_line2(display);   
                    
                    PC.printf("CH 2 selected,press ENTER\n");
                    //how to set Sensor to 2?
                    //Send_Message();
                    enter1key(2);
                    
                    break1 =1;
                    break;
                case 3:
                sprintf(display,"CH3 press  ENTER");   
                writestringspi_line2(display); 
                    PC.printf("CH 3 selected,press ENTER\n");
                    //how to set Sensor to 2?
                    //Send_Message();
                    
                    enter1key(3);
                    break1 =1;
                    break;
                case 4:
                sprintf(display,"CH4 press  ENTER");   
                writestringspi_line2(display); 
                    PC.printf("CH 4 selected,press ENTER\n");
                    //how to set Sensor to 2?
                    //Send_Message();
                    enter1key(4);
                    
                    break1 =1;
                    break;
                case 5:
                sprintf(display,"CH5 press  ENTER");   
                writestringspi_line2(display); 
                    PC.printf("CH 5 selected,press ENTER\n");
                    //how to set Sensor to 2?
                    //Send_Message();
                    enter1key(5);
                    
                    break1 =1;
                    break;
                case 6:
                sprintf(display,"CH6 press  ENTER");   
                writestringspi_line2(display); 
                    PC.printf("CH 6 selected,press ENTER\n");
                    //how to set Sensor to 2?
                    //Send_Message();
                    enter1key(6);
                    
                    break1 =1;
                    break;
                case 7:
                sprintf(display,"CH7 press  ENTER");   
                writestringspi_line2(display); 
                    PC.printf("CH 7 selected,press ENTER\n");
                    //how to set Sensor to 2?
                    //Send_Message();
                    enter1key(7);
                    
                    break1 =1;
                    break;
                case 8:
                sprintf(display,"CH8 press  ENTER");   
                writestringspi_line2(display); 
                    PC.printf("CH 8 selected,press ENTER\n");
                    //how to set Sensor to 2?
                    //Send_Message();
                    enter1key(8);
                    
                    break1 =1;
                    break;
               /* case 12:
                    break1 =1;
                    selectSensor();
                    break; */  
                default:
                    /*PC.printf("Please Select a Valid Input\n");
                    PC.printf("\nSelect Sensor:\n");
                    PC.printf("1. Sensor 1\n");
                    PC.printf("2. Sensor 2\n");
                    PC.printf("Press * to go to main menu\n");
                    break; */ 
                    break1 =1;
                    PC.printf("Pressed other thatn 1to8  to ESCAPE\n");
                    break;
                    
                }
            
            Index = -1;
        }
    }
    return 0;
}




int curveData()
{
    break1 = 0;
    Index = -1;
    
    while (break1 != 1) {
        __wfi();
        if (Index > -1) {
          
            input = Index + 1;
             
           PC.printf("\nSelect curve\n");
           PC.printf("1. curve1 \n");
           PC.printf("2. curv2 \n");
            
            switch (input){
                 case 1:
                  PC.printf("selected curve1 \n");
                  break;
                 
                 case 2:
                 PC.printf("selected curve2 \n");
                  break;
                 
                 default:
                 break;
            }
            
            Index = -1;
        }
    }
    return 0;
}

int selectBaud(){
    break1 = 0;
    Index = -1;
    PC.printf("\nSelect Baud Rate\n");
    PC.printf("1. 4800\n");
    PC.printf("2. 9600\n");
    PC.printf("3. 19200\n");
    PC.printf("4. 38400\n");
    PC.printf("5. 57600\n");
    PC.printf("5. 115200\n");
    PC.printf("Press * to go to main menu\n");
    while (break1 != 1) {
        __wfi();
        if (Index > -1) {

            input = Index + 1;
            switch (input){
                case 1:
                  //  state = '1';
                    PC.printf("4800\n");
                   // PC.baud(4800);
                    Send_Message();
                    break;
                case 2:
                   // state = '2';
                    PC.printf("9600\n");
                  //  PC.baud(9600);
                    Send_Message();
                    break;
                case 3:
                   // state = '3';
                    PC.printf("19200\n");
                   // PC.baud(19200);
                    Send_Message();
                    break;
                case 4:
                   // state = '4';
                    PC.printf("38400\n");
                   // PC.baud(38400);
                    Send_Message();
                    break;
                case 5:
                   // state = '5';
                    PC.printf("Baud Rate=57600\n");
                  //  PC.baud(57600);
                    Send_Message();
                    break;
                case 6:
                   // state = '5';
                    PC.printf("Baud Rate=115200n");
                  //  PC.baud(115200);
                    Send_Message();
                    break;
                case 10:
                    break1 =1;
                    menu();
                    break;
                default:
                    PC.printf("Please Input a Valid Input\n");
                    PC.printf("\nSelect Baud Rate\n");
                    PC.printf("1. 4800\n");
                    PC.printf("2. 9600\n");
                    PC.printf("3. 19200\n");
                    PC.printf("4. 38400\n");
                    PC.printf("5. 57600\n");
                    PC.printf("5. 115200\n");
                    PC.printf("Press * to go to main menu\n");
                    break;
                }
            
            Index = -1;
        }
    }
    return 0;
}

float curveDataentry(char *s)
{
    char* packet_data = new char[6];
    strcpy(packet_data,"\0");
     
     PC.printf("Enter %s",s);
     break1 = 0;
    Index = -1;
    
    while (break1 != 1) 
    {
        __wfi();
        if (Index > -1) 
        {
          
            input = Index + 1;
             
            
            
            switch (input)
            {
                 case 1:
                  PC.printf("1");
                  strcat(packet_data,"1");
                  break;
                 
                 case 2:
                 PC.printf("2");
                 strcat(packet_data,"2");
                  break;
                 case 3:
                 PC.printf("3");
                 strcat(packet_data,"3");
                 break;
                  case 4:
                 PC.printf("4");
                 strcat(packet_data,"4");
                 break;
                  case 5:
                 PC.printf("5");
                 strcat(packet_data,"5");
                  break;
                  case 6:
                 PC.printf("6");
                 strcat(packet_data,"6");
                  break;
                  case 7:
                 PC.printf("7");
                 strcat(packet_data,"7");
                  break;
                  case 8:
                 PC.printf("8");
                 strcat(packet_data,"8");
                  break;
                  case 9:
                 PC.printf("9");
                 strcat(packet_data,"9");
                 break;
                 case 10:
                 PC.printf(".");
                 strcat(packet_data,".");
                 break;
                 case 11:
                 PC.printf("0");
                 strcat(packet_data,"0");
                 break;
                  case 12:
                 PC.printf("\n String data is %s\n",packet_data);
                 kybstrnum=atof(packet_data);
                 PC.printf("\n float converted  data mult by 2  is %f\n",kybstrnum*1);
                 break1=1; 
                  break; 
                  
                 default:
                 //break;
            }
            
            Index = -1;
        }
    }
    return kybstrnum;
     
}

/*

float sensor3vtot(float vin)
{
    float y;
    m=
     
    x=vin;
    
    c=
    
    y= mx+c;
    
    
    return(y);
    
}

*/
void interpolate(float x[], float y[])
{
    for (i=0; i<10; i++)
    {
        m[i] = (y[i+1] - y[i]) / (x[i+1] - x[i]);
        c[i] = y[i] - m[i]*x[i];
    }
}



float sensorVtoT(float volt)
{
    float temp = 0;
    if (volt >= x[0] && volt < x[1])
        temp = m[0]*volt + c[0];
    else if (volt >= x[1] && volt < x[2])
        temp = m[1]*volt + c[1];
    else if (volt >= x[2] && volt < x[3])
        temp = m[2]*volt + c[2];
    else if (volt >= x[3] && volt < x[4])
        temp = m[3]*volt + c[3];
    else if (volt >= x[4] && volt < x[5])
        temp = m[4]*volt + c[4];
    else if (volt >= x[5] && volt < x[6])
        temp = m[5]*volt + c[5];
    else if (volt >= x[6] && volt < x[7])
        temp = m[6]*volt + c[6];
    else if (volt >= x[7] && volt < x[8])
        temp = m[7]*volt + c[7];
    else if (volt >= x[8] && volt < x[9])
        temp = m[8]*volt + c[8];
    else if (volt >= x[9] && volt <= x[10])
        temp = m[9]*volt + c[9];

    /*
    if (volt == 10.0)
        temp = m[(int)volt-1]*volt + c[(int)volt-1];
    else    
        temp = m[(int)volt]*volt + c[(int)volt];
    */
    return temp; //  temp;
}



void continuousreadsensor()
{
  
interpolate(x,y);
  
  
  //   PC.printf("Temp is %f\n",sensor3vtot(vin) );
sensor1voltage=ch1.read();
sensor2voltage=ch2.read();
sensor3voltage=ch3.read();
sensor4voltage=ch4.read();

//sensorVtoT(sensor1voltage*10);

//sensorVtoT(sensor1voltage*10
displaygotofirstchar(1);
sprintf(display,"%6.2fK %6.2fK", sensorVtoT(sensor1voltage*10),sensor2voltage*10*1.111);   
    writestringspi_line1(display);
sprintf(display,"%6.2fK %6.2fK",sensor3voltage*10*1.111,sensor4voltage*10*1.111);   
    writestringspi_line2(display);     
}
 
int main()
{
    
 
    
  
    
    
    PC.printf("\nControl Menu\r\n");  
    menu();
    
    //             r0   r1   r2   r3   c0   c1   c2   c3
    Keypad keypad(p21, p22,  p23,  p24, p25, p26,  p27,  NC);
    keypad.attach(&cbAfterInput);
    keypad.start();  // energize the columns c0-c3 of the keypad
 
 
 displayinitialize();
 writestringspi_line1("                  ");
 writestringspi_line2("                  ");
 writestringspi_line2("LOW TEMP");
 
    while (1) {
        __wfi();
        
        //PC.printf("inside while 1  %u \n",Index);
        continuousreadsensor();
        for (i=1;i<9;i++)
        { 
        printf("channel is  %d  sensor is %d\n",i, channelsensortable[i]); 
        }
        
         for (i=0;i<11;i++)
                    {
                     
                    PC.printf("x stored is = %f\n",x[i]);
                     
                    PC.printf("y stored is = %f\n",y[i]);
                    }
        
    
        if (Index > -1) {
            
            PC.printf("inside first if %u \n",Index+1);

            input = Index + 1;
            switch (input){
                /*case 1:
                    PC.printf("Calling selectSensor()... \n");
                    id = '1';
                    // selectSensor();
                    break; */
                    
                case 2:
                    PC.printf("Calling sensor3curveDataEntry()... \n");
                    id = '2';
                    
                    for (i=0;i<11;i++)
                    {
                    x[i]=curveDataentry("x");
                    PC.printf("x returned is = %f\n",x[i]);
                    y[i]=curveDataentry("y");
                    PC.printf("y returned is = %f\n",y[i]);
                    }
                    
                    
                    
                    break; 
                /*case 3:
                    PC.printf("Calling selectBaud()... \n");
                    id = '3';
                    selectBaud();
                    break;*/
                case 6:
                    PC.printf("Pressed 6 to enter Sensor Selection for 8 Channels... \n");
                    id = '6';
                    sensortypeselect();
                    break;    
                default:
                    PC.printf("Please Enter a Valid Input either  2 or 6\n");
                    //menu();
                    break;
            }
            
            Index = -1;
            
        }
    }
}
